{"version":3,"sources":["webpack://letterbox-frontend/./client/events/user-letter-change.js","webpack://letterbox-frontend/./client/letters.js","webpack://letterbox-frontend/./client/index.js"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yDAAe,qBAAqB;;;ACxB2B;;AAExD;AACP;;AAEA,iBAAiB,YAAY;AAC7B,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA,wCAAwC,kBAAqB;;AAE7D;AACA;;AAEA;;AAEA;AACA;;;AChE+D;AACE;;AAEjE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS,KAAK,qBAAqB;;AAEpD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,aAAa;AAC/B;;AAEA;AACA;;AAEA;AACA,EAAE,WAAW;;AAEb;AACA,cAAc,SAAS;AACvB,GAAG;;AAEH,6BAA6B,4BAA+B;AAC5D;AACA,GAAG;;AAEH;AACA;;AAEA","file":"main.js","sourcesContent":["/**\n * An event describing a single letter change in the letterbox.\n *\n * An important distinction to make is that *user* letter change events originate from the user, while regular letter\n * change events originate from the server.\n */\nclass UserLetterChangeEvent extends Event {\n  /**\n   * Create a user letter change event.\n   * @param {number} index changed letter index\n   * @param {string} newValue new letter value\n   */\n  constructor (index, newValue) {\n    super(UserLetterChangeEvent.eventName)\n\n    this.index = index\n    this.newValue = newValue\n  }\n\n  static get eventName () {\n    return 'user-letter-change'\n  }\n}\n\nexport default UserLetterChangeEvent\n","import UserLetterChangeEvent from \"./events/user-letter-change\"\n\nexport function generateItems (target, width, height) {\n  const result = []\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const element = document.createElement('span')\n      element.innerText = String.fromCharCode(48 + 64 * Math.random())\n      target.appendChild(element)\n\n      result.push(element)\n    }\n\n    const lineBreak = document.createElement('br')\n    target.appendChild(lineBreak)\n  }\n\n  return result\n}\n\nexport function moveFocus (context, offset) {\n  let result = (context.focus + offset) % context.letters.length\n\n  while (result < 0) { result += context.letters.length }\n\n  return {\n    ...context,\n    focus: result\n  }\n}\n\nexport function updateFocus (context) {\n  context.letters.forEach((letter, index) =>\n    index === context.focus\n      ? letter.classList.add('highlight')\n      : letter.classList.remove('highlight')\n  )\n}\n\nexport function handleKey (context, e) {\n  if (e.code === 'ArrowRight') {\n    context = moveFocus(context, 1)\n  } else if (e.code === 'ArrowLeft') {\n    context = moveFocus(context, -1)\n  } else if (e.code === 'ArrowUp') {\n    context = moveFocus(context, -context.width)\n  } else if (e.code === 'ArrowDown') {\n    context = moveFocus(context, context.width)\n  } else if (e.key.length === 1) {\n    const value = e.key.match(/\\s/)\n      ? '_'\n      : e.key\n\n    context.letters[context.focus].innerText = value\n\n    context.letterbox.dispatchEvent(new UserLetterChangeEvent(context.focus, value))\n\n    context = moveFocus(context, 1)\n  }\n\n  updateFocus(context)\n\n  return context\n}\n","import UserLetterChangeEvent from './events/user-letter-change'\nimport { generateItems, updateFocus, handleKey } from './letters'\n\nlet context = {\n  width: 80,\n  height: 24,\n\n  letterbox: undefined,\n  letters: [],\n  focus: 0\n}\n\nfunction fitToScreen (element, scale) {\n  const finalScale = scale * Math.min(\n    window.innerWidth / element.offsetWidth,\n    window.innerHeight / element.offsetHeight\n  )\n\n  element.style.scale = finalScale\n\n  element.style.left = (window.innerWidth - element.offsetWidth) / 2\n  element.style.top = (window.innerHeight - element.offsetHeight) / 2\n}\n\nfunction wsConnect () {\n  const protocol = location.protocol.startsWith('https') ? 'wss' : 'ws'\n  const url = `${protocol}://${window.location.host}/`\n\n  console.log('Connecting to', url)\n\n  const webSocket = new WebSocket(url)\n  webSocket.onopen = () => {\n    console.log('Socket open!')\n  }\n}\n\nfunction boot () {\n  const letterbox = document.querySelector('.letterbox')\n  context.letterbox = letterbox\n\n  const letters = generateItems(letterbox, context.width, context.height)\n  fitToScreen(letterbox, 0.9)\n\n  window.onresize = () =>\n    fitToScreen(letterbox, 0.9)\n\n  context.letters = letters\n  updateFocus(context)\n\n  document.addEventListener('keydown', event => {\n    context = handleKey(context, event)\n  })\n\n  letterbox.addEventListener(UserLetterChangeEvent.eventName, event => {\n    console.log('User letter change!', event)\n  })\n\n  wsConnect()\n}\n\nboot()\n"],"sourceRoot":""}