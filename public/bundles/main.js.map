{"version":3,"sources":["webpack://letterbox-frontend/./client/index.js"],"names":[],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,YAAY;AAC7B,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA","file":"main.js","sourcesContent":["let context = {\n  width: 80,\n  height: 24,\n\n  letters: [],\n  focus: 0\n}\n\nfunction fitToScreen (element, scale) {\n  const finalScale = scale * Math.min(\n    window.innerWidth / element.offsetWidth,\n    window.innerHeight / element.offsetHeight\n  )\n\n  element.style.scale = finalScale\n\n  element.style.left = (window.innerWidth - element.offsetWidth) / 2\n  element.style.top = (window.innerHeight - element.offsetHeight) / 2\n}\n\nfunction generateItems (target, width, height) {\n  const result = []\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const element = document.createElement('span')\n      element.innerText = String.fromCharCode(48 + 64 * Math.random())\n      target.appendChild(element)\n\n      result.push(element)\n    }\n\n    const lineBreak = document.createElement('br')\n    target.appendChild(lineBreak)\n  }\n\n  return result\n}\n\nfunction moveFocus (context, offset) {\n  let result = (context.focus + offset) % context.letters.length\n\n  while (result < 0) { result += context.letters.length }\n\n  return {\n    ...context,\n    focus: result\n  }\n}\n\nfunction updateFocus (context) {\n  context.letters.forEach((letter, index) =>\n    index === context.focus\n      ? letter.classList.add('highlight')\n      : letter.classList.remove('highlight')\n  )\n}\n\nfunction handleKey (e) {\n  let isMove = false\n\n  if (e.code === 'ArrowRight') {\n    isMove = true\n    context = moveFocus(context, 1)\n  } else if (e.code === 'ArrowLeft') {\n    isMove = true\n    context = moveFocus(context, -1)\n  } else if (e.code === 'ArrowUp') {\n    isMove = true\n    context = moveFocus(context, -context.width)\n  } else if (e.code === 'ArrowDown') {\n    isMove = true\n    context = moveFocus(context, context.width)\n  } else if (e.key.length === 1) {\n    context.letters[context.focus].innerText = e.key.match(/\\s/)\n      ? '_'\n      : e.key\n    context = moveFocus(context, 1)\n    isMove = 1\n  }\n\n  if (isMove) { updateFocus(context) }\n}\n\nfunction boot () {\n  const letterbox = document.querySelector('.letterbox')\n  const letters = generateItems(letterbox, context.width, context.height)\n  fitToScreen(letterbox, 0.9)\n\n  window.onresize = () =>\n    fitToScreen(letterbox, 0.9)\n\n  context.letters = letters\n  updateFocus(context)\n\n  document.addEventListener('keydown', handleKey)\n}\n\nboot()\n"],"sourceRoot":""}